// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  role         String    @default("user")
  profilePhoto String?   // Profil fotoğrafı URL'si (opsiyonel)
  posts        Post[]
  comments     Comment[]
  likes        Like[]
  images       Image[]   // Kullanıcının yüklediği resimler
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])
  comments   Comment[]
  createdAt  DateTime  @default(now())
  likes      Like[]
  images     Image[]   // Gönderiye eklenen resimler
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  postId    Int
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  post    Post  @relation(fields: [postId], references: [id])
  postId  Int

  @@unique([userId, postId])
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String   // Görselin dosya yolu veya URL'si
  userId    Int?     // Kullanıcıya ait olabilir
  postId    Int?     // Gönderiye ait olabilir
  user      User?    @relation(fields: [userId], references: [id])
  post      Post?    @relation(fields: [postId], references: [id])
  uploadedAt DateTime @default(now())
}
